; videomod
;
; Video module for freeOS, that implements some sort
; of video memory routine
;
; OS: freeOS
; Initiator: darkness.bsd (Dmitry)
; Email: darkness.bsd@gmail.com
; From: F.E.D. (http://0x10cforum.com/forum/m/4932880/viewthread/2806646-federation-exploration-development)
; Github: github.com/darknessbsd/freeos

; Start println function
;     1 param - address to zero-ended string, maximum 232 charecters (need to bag fix)
;     2 param - return address
:println
     SET PUSH, A
     SET PUSH, B
     SET PUSH, C
     SET PUSH, X
     SET PUSH, Y
     SET PUSH, Z
     SET PUSH, I
     SET PUSH, J
     SET PUSH, O

     ADD SP, 0x000A
     SET A, PEEK ; address of string in A
     SUB SP, 1
     SET X, PEEK
     ADD SP, 1
     SET PEEK, X
     SUB SP, 0x000A

:println_search_empty_line
     IFE [0x8180], 0x8180
     SET PC, setup_println_check_string_size
     SET B, [0x8180]
     SET I, 0
:println_loop
     IFE [A], 0
     SET PC, println_end
     SET X, [A]
     ADD X, 0xA000
     SET [B], X
     ADD A, 1
     ADD B, 1
     IFE I, 0x001F
     SET PC, println_modify_pointer
     SET PC, println_loop_continue
:println_modify_pointer
     SET I, 0
     SET X, [0x8180]
     ADD X, 0x0020
     SET [0x8180], X
     SET PC, println_loop
:println_loop_continue
     ADD I, 1
     SET PC, println_loop
:setup_println_check_string_size
     SET I, 0
     SET J, 1
     SET B, A
:println_check_string_size
     IFE [B], 0
     SET PC, setup_println_update_video_ram
     IFE I, 0x0020
     SET PC, println_update_counter
     SET PC, println_check_string_size_next
:println_update_counter
     ADD J, 1
     SET I, 0
     ADD B, 1
     SET PC, println_check_string_size
:println_check_string_size_next
     ADD I, 1
     ADD B, 1
     SET PC, println_check_string_size
:setup_println_update_video_ram
     SET B, 0x0020
     MUL B, J
     SET PUSH, B
     SET C, 0x8180
     SUB C, B
     SET [0x8180], C ; set pointer to last line
     SET B, 0x8000
     ADD B, POP
     SET C, 0x8000
:println_update_video_ram
     IFE B, 0x8180
     SET PC, println_clear_space_for_new_line
     SET PUSH, [B]
     SET [C], POP
     ADD B, 1
     ADD C, 1
     SET PC, println_update_video_ram
:println_clear_space_for_new_line
     IFE C, 0x8180
     SET PC, println_search_empty_line
     SET [C], 0
     ADD C, 1
     SET PC, println_clear_space_for_new_line
:println_end
     SET X, [0x8180]
     ADD X, 0x0020
     SET [0x8180], X

     SET O, POP
     SET J, POP
     SET I, POP
     SET Z, POP
     SET Y, POP
     SET X, POP
     SET C, POP
     SET B, POP
     SET A, POP
     ADD SP, 1
     SET PC, POP
; End println function

; Start print function
;     1 param - address to zero-ended string
;     2 param - return address
:print
     SET PUSH, A
     SET PUSH, B
     SET PUSH, C
     SET PUSH, X
     SET PUSH, Y
     SET PUSH, Z
     SET PUSH, I
     SET PUSH, J
     SET PUSH, O

     ADD SP, 0x000A
     SET A, PEEK ; address of string in A
     SUB SP, 1
     SET X, PEEK
     ADD SP, 1
     SET PEEK, X
     SUB SP, 0x000A

     SET B, [0x8180]
     IFE B, 0x8180
     SUB B, 0x0020
     SET I, 0
:print_loop
     IFE [A], 0
     SET PC, print_end
     SET X, [A]
     ADD X, 0xA000
     SET [B], X
     ADD A, 1
     ADD B, 1
     IFE I, 0x001F
     SET PC, print_end
     ADD I, 1
     SET PC, print_loop
:print_end
     SET O, POP
     SET J, POP
     SET I, POP
     SET Z, POP
     SET Y, POP
     SET X, POP
     SET C, POP
     SET B, POP
     SET A, POP
     ADD SP, 1
     SET PC, POP
; End print function

; Start showWand function
;     1 param - return address
:showWand_wand0
     DAT 0x0020, 0x005C, 0x0000
:showWand_wand1
     DAT 0x0020, 0x007C, 0x0000
:showWand_wand2
     DAT 0x0020, 0x002F, 0x0000
:showWand
     SET PUSH, A
     SET PUSH, B
     SET PUSH, C
     SET PUSH, X
     SET PUSH, Y
     SET PUSH, Z
     SET PUSH, I
     SET PUSH, J
     SET PUSH, O

     SET I, 0
     SET J, 0
     SET C, 0
:showWand_waiting
     IFE J, 0x001F
     SET PC, showWand_end
     IFN I, 0x01FF
     SET PC, showWand_waiting_next
     ADD J, 1
     SET I, 0
     IFE C, 0
     SET PC, showWand_print_wand0
     IFE C, 1
     SET PC, showWand_print_wand1
     IFE C, 2
     SET PC, showWand_print_wand2
:showWand_print_wand0
     SET C, 1
     SET PUSH, showWand_wand0
     JSR print
     SET PC, showWand_waiting
:showWand_print_wand1
     SET C, 2
     SET PUSH, showWand_wand1
     JSR print
     SET PC, showWand_waiting
:showWand_print_wand2
     SET C, 0
     SET PUSH, showWand_wand2
     JSR print
     SET PC, showWand_waiting
:showWand_waiting_next
     ADD I, 1
     SET PC, showWand_waiting
:showWand_end
     SET O, POP
     SET J, POP
     SET I, POP
     SET Z, POP
     SET Y, POP
     SET X, POP
     SET C, POP
     SET B, POP
     SET A, POP
     SET PC, POP
; End showWand function
